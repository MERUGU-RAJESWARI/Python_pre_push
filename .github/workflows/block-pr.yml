name: Block PR if Test Coverage < 75%

on:
  pull_request:
    branches:
      - main

jobs:
  test-python:
    name: Python Tests & Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install pytest pytest-cov jq

      - name: Run Python tests with coverage
        run: pytest --cov=. --cov-report=term-missing --cov-report=json:coverage.json

      - name: Extract Python coverage
        id: python_coverage
        run: |
          PYTHON_COVERAGE=$(jq '.totals.percent_covered' coverage.json | awk '{print int($1)}')
          echo "Extracted Python Coverage: $PYTHON_COVERAGE%"
          echo "$PYTHON_COVERAGE" > python_coverage.txt

      - name: Upload Python coverage for later use
        uses: actions/upload-artifact@v3
        with:
          name: python-coverage
          path: python_coverage.txt

  test-java:
    name: Java Tests & Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build & Test with Gradle (for Java Projects)
        run: |
          chmod +x gradlew
          ./gradlew test jacocoTestReport

      - name: Debug - List Jacoco Reports
        run: |
          echo "Checking Jacoco report directory:"
          ls -R build/reports/jacoco/test

      - name: Extract Java Coverage
        id: java_coverage
        run: |
          if [ -f build/reports/jacoco/test/jacocoTestReport.xml ]; then
            echo "Jacoco XML Report Found!"
            COVERED_LINES=$(xmllint --xpath "string(//report/counter[@type='LINE']/@covered)" build/reports/jacoco/test/jacocoTestReport.xml)
            MISSED_LINES=$(xmllint --xpath "string(//report/counter[@type='LINE']/@missed)" build/reports/jacoco/test/jacocoTestReport.xml)

            if [[ -z "$COVERED_LINES" || -z "$MISSED_LINES" ]]; then
              echo "❌ Error: Could not extract Java test coverage numbers!"
              exit 1
            fi

            JAVA_COVERAGE_PERCENT=$(echo "scale=2; ($COVERED_LINES * 100) / ($COVERED_LINES + $MISSED_LINES)" | bc | awk '{print int($1)}')
            echo "Extracted Java Coverage: $JAVA_COVERAGE_PERCENT%"
            echo "$JAVA_COVERAGE_PERCENT" > java_coverage.txt
          else
            echo "❌ Jacoco report XML not found!"
            exit 1
          fi

      - name: Upload Java coverage for later use
        uses: actions/upload-artifact@v3
        with:
          name: java-coverage
          path: java_coverage.txt

  block-pr:
    name: Enforce Coverage Requirement
    runs-on: ubuntu-latest
    needs: [test-python, test-java]

    steps:
      - name: Download Python coverage
        uses: actions/download-artifact@v3
        with:
          name: python-coverage

      - name: Download Java coverage
        uses: actions/download-artifact@v3
        with:
          name: java-coverage

      - name: Read Coverage Values
        run: |
          PYTHON_COVERAGE=$(cat python_coverage.txt)
          JAVA_COVERAGE=$(cat java_coverage.txt)

          echo "Python Test Coverage: $PYTHON_COVERAGE%"
          echo "Java Test Coverage: $JAVA_COVERAGE%"

          if [ "$PYTHON_COVERAGE" -lt 75 ] || [ "$JAVA_COVERAGE" -lt 75 ]; then
            echo "❌ Test coverage is below 75% for Python or Java. Fix it before merging."
            exit 1
          else
            echo "✅ Test coverage meets the requirements. PR can be merged."
